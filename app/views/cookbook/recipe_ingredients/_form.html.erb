<%
  edit ||= false
  form_url = edit ? cookbook_recipe_recipe_ingredient_url(recipe, recipe_ingredient) : cookbook_recipe_recipe_ingredients_path(recipe: recipe)
  method = edit ? :put : :post
%>

<%= form_for recipe_ingredient, as: :recipe_ingredient, url: form_url, method: method do |form| %>
  <div class="block"
       data-controller="searchable cookbook-ingredient"
       data-searchable-endpoint-value="<%= search_cookbook_ingredients_url(format: :turbo_stream) %>"
  >
    <div class="buttons m-0 mb-2 p-0">
      <span class="button is-warning m-0" data-action="click->cookbook-ingredient#clear">Clear</span>
    </div>

    <%= form.fields_for :ingredient, recipe_ingredient.ingredient, include_id: false do |ingredient_form| %>
      <%= ingredient_form.hidden_field :id, data: { cookbook_ingredient_target: 'id' } %>

      <%=
        render Form::Field::ImageComponent.new ingredient_form,
                                               attr: :cover_image,
                                               image: recipe_ingredient.ingredient.cover_image,
                                               has_errors: errors_for?(recipe_ingredient.ingredient, :cover_image),
                                               options: {
                                                 preview: {
                                                   data: {
                                                     cookbook_ingredient_target: 'preview'
                                                   }
                                                 },
                                                 input: {
                                                   data: {
                                                     cookbook_ingredient_target: 'file'
                                                   }
                                                 }
                                               } do |field|
      %>
        <%= field.errors formatted_errors(recipe_ingredient.ingredient, :cover_image) %>
      <% end %>

      <div class="buttons is-centered m-0 p-0" id="ingredient_search_results">
      </div>

      <%= render Form::Field::Component.new do |field| %>
        <%= field.label ingredient_form, attr: :name %>

        <%= field.control do %>
          <div class="control">
            <%=
              render Form::Input::TextComponent.new(ingredient_form,
                                                    attr: :name,
                                                    has_errors: errors_for?(recipe_ingredient.ingredient, :name),
                                                    options: {
                                                      data: {
                                                        cookbook_ingredient_target: 'name',
                                                        action: 'change->searchable#search keyup->searchable#search'
                                                      }
                                                    })
            %>
          </div>
        <% end %>

        <%= field.errors formatted_errors(recipe_ingredient.ingredient, :name) %>
      <% end %>
    <% end %>

    <%= render Form::Field::Component.new options: { data: { controller: 'input-numeric' } } do |field| %>
      <%= field.label form, attr: :amount %>

      <%= field.control do %>
        <%= render Form::Field::Component.new options: { grouped: true } do |subfield| %>
          <%= subfield.control do %>
            <div class="control">
              <%= render Form::Input::Numeric::DecrementComponent.new %>
            </div>
          <% end %>

          <%= subfield.control do %>
            <div class="control">
              <%= render Form::Input::Numeric::DecrementComponent.new step: 0.1 %>
            </div>
          <% end %>

          <%= subfield.control do %>
            <div class="control is-expanded">
              <%=
                render Form::Input::Numeric::Component.new form,
                                                           attr: :amount,
                                                           has_errors: errors_for?(recipe_ingredient, :amount),
                                                           options: { step: 0.001 }
              %>
            </div>
          <% end %>

          <%= subfield.control do %>
            <div class="control">
              <%= render Form::Input::Numeric::IncrementComponent.new step: 0.1 %>
            </div>
          <% end %>

          <%= subfield.control do %>
            <div class="control">
              <%= render Form::Input::Numeric::IncrementComponent.new %>
            </div>
          <% end %>
        <% end %>
      <% end %>

      <%= field.errors formatted_errors(recipe_ingredient, :amount) %>
    <% end %>

    <%= render Form::Field::Component.new do |field| %>
      <%= field.label form, attr: :unit %>

      <%= field.control do %>
        <div class="control">
          <%=
            render Form::Input::SelectComponent.new form,
                                                    attr: :unit,
                                                    collection_class: Inventory::Unit::Base,
                                                    has_errors: errors_for?(recipe_ingredient, :unit),
                                                    options: {
                                                      selected: recipe_ingredient.unit&.option_for_select_value
                                                    }
          %>
        </div>
      <% end %>

      <%= field.errors formatted_errors(recipe_ingredient, :unit) %>
    <% end %>
  </div>

  <div class="buttons is-centered pb-3">
    <%= form.submit class: 'button is-primary', data: { action: 'click->layout#requestFromButton' } %>
    <%= render Layout::AuxiliaryPanel::Buttons::CloseComponent.new %>
  </div>
<% end %>
